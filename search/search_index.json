{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Alcali Documentation \u00b6 What's Alcali? \u00b6 Alcali is a web based tool for monitoring and administrating Saltstack\u00ae Salt. Features \u00b6 Get notified in real time when a job is created, updated or has returned. Store your jobs results by leveraging the master_job_store setting with Alcali master returner. Check your minions conformity to their highstate. Keep track of custom state at a glance. Use custom auth module to login into both Alcali and the Salt-api using JWT. Image: Jean-Philippe WMFr, \u0153uvre d\u00e9riv\u00e9e : User:Benoit Rochon CC BY-SA 4.0","title":"Home"},{"location":"#welcome-to-alcali-documentation","text":"","title":"Welcome to Alcali Documentation"},{"location":"#whats-alcali","text":"Alcali is a web based tool for monitoring and administrating Saltstack\u00ae Salt.","title":"What's Alcali?"},{"location":"#features","text":"Get notified in real time when a job is created, updated or has returned. Store your jobs results by leveraging the master_job_store setting with Alcali master returner. Check your minions conformity to their highstate. Keep track of custom state at a glance. Use custom auth module to login into both Alcali and the Salt-api using JWT. Image: Jean-Philippe WMFr, \u0153uvre d\u00e9riv\u00e9e : User:Benoit Rochon CC BY-SA 4.0","title":"Features"},{"location":"auth/","text":"","title":"Auth"},{"location":"configuration/","text":"Configuration \u00b6 Configure Alcali \u00b6 .env file \u00b6 # alcali_backend can be set to netapi or pyapi. ALCALI_BACKEND = netapi MASTER_MINION_ID = master # DB DB_BACKEND = mysql DB_NAME = salt DB_USER = alcali DB_PASS = alcali DB_HOST = db DB_PORT = 3306 # django DJANGO_DEBUG = true DJANGO_SECRET = thisisnotagoodsecret.orisit? ALLOWED_HOSTS = * DJANGO_SETTINGS = config.settings.dev # salt-api SALT_USER = admin SALT_PASS = testytest SALT_HOST = master SALT_PORT = 8080 SALT_AUTH = alcali Use this as an example. Docker \u00b6 You can pass the .env file to the docker run command with the --env-file=FILE option. See running Alcali . Running locally \u00b6 Use the ENV_PATH environment variable. See running Alcali .","title":"Configuration"},{"location":"configuration/#configuration","text":"","title":"Configuration"},{"location":"configuration/#configure-alcali","text":"","title":"Configure Alcali"},{"location":"configuration/#env-file","text":"# alcali_backend can be set to netapi or pyapi. ALCALI_BACKEND = netapi MASTER_MINION_ID = master # DB DB_BACKEND = mysql DB_NAME = salt DB_USER = alcali DB_PASS = alcali DB_HOST = db DB_PORT = 3306 # django DJANGO_DEBUG = true DJANGO_SECRET = thisisnotagoodsecret.orisit? ALLOWED_HOSTS = * DJANGO_SETTINGS = config.settings.dev # salt-api SALT_USER = admin SALT_PASS = testytest SALT_HOST = master SALT_PORT = 8080 SALT_AUTH = alcali Use this as an example.","title":".env file"},{"location":"configuration/#docker","text":"You can pass the .env file to the docker run command with the --env-file=FILE option. See running Alcali .","title":"Docker"},{"location":"configuration/#running-locally","text":"Use the ENV_PATH environment variable. See running Alcali .","title":"Running locally"},{"location":"contribute/","text":"Contribute \u00b6 Issue \u00b6 If you found an issue with Alcali, don't hesitate to open an issue. An issue template should provide all the infos we needed. Dev environment \u00b6 Black \u00b6 Alcali follow the strict black coding style. Before submitting a pull request, please make sure you run black. Pull request \u00b6 Pull request must refer to an open issue.","title":"Contribute"},{"location":"contribute/#contribute","text":"","title":"Contribute"},{"location":"contribute/#issue","text":"If you found an issue with Alcali, don't hesitate to open an issue. An issue template should provide all the infos we needed.","title":"Issue"},{"location":"contribute/#dev-environment","text":"","title":"Dev environment"},{"location":"contribute/#black","text":"Alcali follow the strict black coding style. Before submitting a pull request, please make sure you run black.","title":"Black"},{"location":"contribute/#pull-request","text":"Pull request must refer to an open issue.","title":"Pull request"},{"location":"installation/","text":"Installation \u00b6 Prerequisite \u00b6 Alcali try to be very modular. The minimal requirement is a database ( MariaDB/Mysql or Postgres ) accessible to both your Salt master and Alcali and the Salt-Api accessible. Preparing the salt master \u00b6 Database access and master job store configuration \u00b6 Please refer to Salt MySQL or Postgres returner documentation. It provide both the database schema and the needed master configuration. Here is a Salt master configuration example: event_return : [ mysql ] master_job_cache : mysql mysql.host : 'db' mysql.user : 'alcali' mysql.pass : 'alcali' mysql.db : 'salt' mysql.port : 3306 Returners provide a way to archive old jobs. Warning Don't forget to install database connectors: python-mysqldb for MySQL/MariaDB python-psycopg2 for Postgres Formula \u00b6 You can find a Salt formula to manage salt master configuration here Salt Api \u00b6 Please refer to Salt rest_cherrypy documentation on how to setup the salt-api. Installing Alcali \u00b6 There is 3 different ways to run Alcali: Using a docker container From PyPI From Source Info Alcali follow Salt major and minor versioning. If you are using 2019.2.0 Salt version, you should install 2019.2.X Alcali version. Using Docker \u00b6 The official Docker image for Alcali comes with all dependencies pre-installed and ready-to-use with the latest version published on PyPI. Pull it with: docker pull latenighttales/alcali:2019.2.0 The alcali executable is provided as an entrypoint. Using pip \u00b6 Info We strongly recommend installing in a virtualenv . Simply do: pip install 'alcali>=2019.2.0,2019.3.0' From Github \u00b6 git clone https://github.com/latenighttales/alcali.git pip install . Troubleshooting \u00b6","title":"Installation"},{"location":"installation/#installation","text":"","title":"Installation"},{"location":"installation/#prerequisite","text":"Alcali try to be very modular. The minimal requirement is a database ( MariaDB/Mysql or Postgres ) accessible to both your Salt master and Alcali and the Salt-Api accessible.","title":"Prerequisite"},{"location":"installation/#preparing-the-salt-master","text":"","title":"Preparing the salt master"},{"location":"installation/#database-access-and-master-job-store-configuration","text":"Please refer to Salt MySQL or Postgres returner documentation. It provide both the database schema and the needed master configuration. Here is a Salt master configuration example: event_return : [ mysql ] master_job_cache : mysql mysql.host : 'db' mysql.user : 'alcali' mysql.pass : 'alcali' mysql.db : 'salt' mysql.port : 3306 Returners provide a way to archive old jobs. Warning Don't forget to install database connectors: python-mysqldb for MySQL/MariaDB python-psycopg2 for Postgres","title":"Database access and master job store configuration"},{"location":"installation/#formula","text":"You can find a Salt formula to manage salt master configuration here","title":"Formula"},{"location":"installation/#salt-api","text":"Please refer to Salt rest_cherrypy documentation on how to setup the salt-api.","title":"Salt Api"},{"location":"installation/#installing-alcali","text":"There is 3 different ways to run Alcali: Using a docker container From PyPI From Source Info Alcali follow Salt major and minor versioning. If you are using 2019.2.0 Salt version, you should install 2019.2.X Alcali version.","title":"Installing Alcali"},{"location":"installation/#using-docker","text":"The official Docker image for Alcali comes with all dependencies pre-installed and ready-to-use with the latest version published on PyPI. Pull it with: docker pull latenighttales/alcali:2019.2.0 The alcali executable is provided as an entrypoint.","title":"Using Docker"},{"location":"installation/#using-pip","text":"Info We strongly recommend installing in a virtualenv . Simply do: pip install 'alcali>=2019.2.0,2019.3.0'","title":"Using pip"},{"location":"installation/#from-github","text":"git clone https://github.com/latenighttales/alcali.git pip install .","title":"From Github"},{"location":"installation/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"licence/","text":"Licence \u00b6 MIT License Copyright (c) 2019 Matthieu Melquiond Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Licence"},{"location":"licence/#licence","text":"MIT License Copyright (c) 2019 Matthieu Melquiond Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Licence"},{"location":"running/","text":"Running Alcali \u00b6 First make sure that Alcali is correctly installed. You can verify installation by running: alcali --version # alcali version 2019.2.1 You can also check that Alcali can access salt database and that needed env var are set by running: alcali check # db: ok # env: ok First Run \u00b6 Apply migrations \u00b6 Danger On the first run and after every update, you need to make sure that the database is synchronized with the current set of models and migrations. Locally: alcali migrate In a docker container: ?? Create a super user \u00b6 Run: alcali createsuperuser You will be prompted for your desired login, email address and password. Run \u00b6 Once migrations are applied and a super user is created, you can start the application. Locally: ENV_PATH=. alcali runserver 0.0.0.0:8000 In a docker container: docker run --rm -it -p 8000:8000 --env-file=FILE latenighttales/alcali:2019.2.0","title":"Running Alcali"},{"location":"running/#running-alcali","text":"First make sure that Alcali is correctly installed. You can verify installation by running: alcali --version # alcali version 2019.2.1 You can also check that Alcali can access salt database and that needed env var are set by running: alcali check # db: ok # env: ok","title":"Running Alcali"},{"location":"running/#first-run","text":"","title":"First Run"},{"location":"running/#apply-migrations","text":"Danger On the first run and after every update, you need to make sure that the database is synchronized with the current set of models and migrations. Locally: alcali migrate In a docker container: ??","title":"Apply migrations"},{"location":"running/#create-a-super-user","text":"Run: alcali createsuperuser You will be prompted for your desired login, email address and password.","title":"Create a super user"},{"location":"running/#run","text":"Once migrations are applied and a super user is created, you can start the application. Locally: ENV_PATH=. alcali runserver 0.0.0.0:8000 In a docker container: docker run --rm -it -p 8000:8000 --env-file=FILE latenighttales/alcali:2019.2.0","title":"Run"},{"location":"try/","text":"Try it! \u00b6 If you just want to have a look, just clone the repository and use docker-compose : git clone https://github.com/latenighttales/alcali.git cd alcali docker-compose up --scale minion=2 Once you see minions getting rejected by the master, you're good to go: minion_1 | [ERROR ] The Salt Master has cached the public key for this node, this salt minion will wait for 10 seconds before attempting to re-authenticate minion_1 | [INFO ] Waiting 10 seconds before retry. Just connect on http://127.0.0.1:8000 , login with: username: admin password: password and follow the walkthrough . Once you're done, you can install it.","title":"Try it!"},{"location":"try/#try-it","text":"If you just want to have a look, just clone the repository and use docker-compose : git clone https://github.com/latenighttales/alcali.git cd alcali docker-compose up --scale minion=2 Once you see minions getting rejected by the master, you're good to go: minion_1 | [ERROR ] The Salt Master has cached the public key for this node, this salt minion will wait for 10 seconds before attempting to re-authenticate minion_1 | [INFO ] Waiting 10 seconds before retry. Just connect on http://127.0.0.1:8000 , login with: username: admin password: password and follow the walkthrough . Once you're done, you can install it.","title":"Try it!"},{"location":"walkthrough/","text":"Walkthrough \u00b6 After you logged in at http://localhost:8000 with: username: admin password: password You should land on the Dashboard view. For now it's empty, but you can already see that some keys are UNACCEPTED . So let's go to the Keys view: http://localhost:8000/keys Accept keys \u00b6 You can either accept keys one by one using the ACCEPT button, or use the Fab button to accept all keys. Add minions \u00b6 Go to http://localhost:8000/minions and use the Fab button to refresh minions. Info By default , refreshing minions will run: grains.items pillar.items on each connected minions. Minion detail \u00b6 From the minions view, click on a minion id to see the minion detail, for example: http://localhost:8000/minions/master/ . Details are parsed from the grains.items state. On the right, 4 tabs are present for now: grains.items pillar.items The last 100 jobs run on this minion A graph of jobs run on this minion We are going to add more useful infos using minions fields . Settings \u00b6","title":"Walkthrough"},{"location":"walkthrough/#walkthrough","text":"After you logged in at http://localhost:8000 with: username: admin password: password You should land on the Dashboard view. For now it's empty, but you can already see that some keys are UNACCEPTED . So let's go to the Keys view: http://localhost:8000/keys","title":"Walkthrough"},{"location":"walkthrough/#accept-keys","text":"You can either accept keys one by one using the ACCEPT button, or use the Fab button to accept all keys.","title":"Accept keys"},{"location":"walkthrough/#add-minions","text":"Go to http://localhost:8000/minions and use the Fab button to refresh minions. Info By default , refreshing minions will run: grains.items pillar.items on each connected minions.","title":"Add minions"},{"location":"walkthrough/#minion-detail","text":"From the minions view, click on a minion id to see the minion detail, for example: http://localhost:8000/minions/master/ . Details are parsed from the grains.items state. On the right, 4 tabs are present for now: grains.items pillar.items The last 100 jobs run on this minion A graph of jobs run on this minion We are going to add more useful infos using minions fields .","title":"Minion detail"},{"location":"walkthrough/#settings","text":"","title":"Settings"},{"location":"pages/conformity/","text":"Conformity \u00b6 Highstate \u00b6 Highstate conformity will schedule a job named highstate_conformity on selected targets. The function used is state . apply test = True . You can use salt targeting syntax, e.g: -G 'os:Fedora' . By default, it will target all minions ( '*' ). Custom \u00b6 Custom conformity will parse the supplied function in minions job history and provide the result on the overview page. To be meaningful, you should run the function regularly (e.g. scheduling a recurring job).","title":"Conformity"},{"location":"pages/conformity/#conformity","text":"","title":"Conformity"},{"location":"pages/conformity/#highstate","text":"Highstate conformity will schedule a job named highstate_conformity on selected targets. The function used is state . apply test = True . You can use salt targeting syntax, e.g: -G 'os:Fedora' . By default, it will target all minions ( '*' ).","title":"Highstate"},{"location":"pages/conformity/#custom","text":"Custom conformity will parse the supplied function in minions job history and provide the result on the overview page. To be meaningful, you should run the function regularly (e.g. scheduling a recurring job).","title":"Custom"},{"location":"pages/events/","text":"Events \u00b6 By default, display only the last 100 Events. Danger It's up to you to monitor salt database. The salt_events table can grow very rapidely. Returners have method to clean jobs regularly.","title":"Events"},{"location":"pages/events/#events","text":"By default, display only the last 100 Events. Danger It's up to you to monitor salt database. The salt_events table can grow very rapidely. Returners have method to clean jobs regularly.","title":"Events"},{"location":"pages/job_details/","text":"Job Details \u00b6 (screenshot) Not much to say here.","title":"Job Details"},{"location":"pages/job_details/#job-details","text":"(screenshot) Not much to say here.","title":"Job Details"},{"location":"pages/jobs/","text":"Jobs \u00b6 (screenshot) By default, only the last 100 jobs are displayed. You can display/search more using the filters on top. Filter by: date or date range minion(s). user(s). To access job details either click on the jid or detail button.","title":"Jobs"},{"location":"pages/jobs/#jobs","text":"(screenshot) By default, only the last 100 jobs are displayed. You can display/search more using the filters on top. Filter by: date or date range minion(s). user(s). To access job details either click on the jid or detail button.","title":"Jobs"},{"location":"pages/keys/","text":"Keys \u00b6 If you use the custom alcali returner, Keys should be automatically refreshed. That's the only difference from the original MySQL Salt returner . Otherwise, you should refresh keys manually using the fab button. Action buttons To make life easier, states used to manage keys are more radical than default salt behaviour. It means that if you use the REJECT button, it will use include_accepted and include_denied argument. If you use the ACCEPT button, it will use include_rejected and include_denied argument. Use wisely.","title":"Keys"},{"location":"pages/keys/#keys","text":"If you use the custom alcali returner, Keys should be automatically refreshed. That's the only difference from the original MySQL Salt returner . Otherwise, you should refresh keys manually using the fab button. Action buttons To make life easier, states used to manage keys are more radical than default salt behaviour. It means that if you use the REJECT button, it will use include_accepted and include_denied argument. If you use the ACCEPT button, it will use include_rejected and include_denied argument. Use wisely.","title":"Keys"},{"location":"pages/minion_details/","text":"Minion Detail \u00b6 (screenshot) Infos and Network \u00b6 All those details are parsed from grain.items except conformity.(see conformity for more infos). By default, the right section contains only: GRAIN: grains.items PILLAR: pillar.items HISTORY: Last 100 jobs for this minion. GRAPH: Filtered for this minion. You can add more section by adding some minion custom fields . We recommend adding: HIGHSTATE: state.show_highstate TOP FILE: state.show_top","title":"Minion Details"},{"location":"pages/minion_details/#minion-detail","text":"(screenshot)","title":"Minion Detail"},{"location":"pages/minion_details/#infos-and-network","text":"All those details are parsed from grain.items except conformity.(see conformity for more infos). By default, the right section contains only: GRAIN: grains.items PILLAR: pillar.items HISTORY: Last 100 jobs for this minion. GRAPH: Filtered for this minion. You can add more section by adding some minion custom fields . We recommend adding: HIGHSTATE: state.show_highstate TOP FILE: state.show_top","title":"Infos and Network"},{"location":"pages/minions/","text":"Minions \u00b6 (screenshot of minions view) List all minions currently in Alcali database. To add more minions, use the fab button and refresh all minions. Only currently accepted keys will be added. Info By default, refreshing minions will only run grains.items on all minions. If you add custom minions fields , they will be run too. To access minion details , click on the minion id.","title":"Minions"},{"location":"pages/minions/#minions","text":"(screenshot of minions view) List all minions currently in Alcali database. To add more minions, use the fab button and refresh all minions. Only currently accepted keys will be added. Info By default, refreshing minions will only run grains.items on all minions. If you add custom minions fields , they will be run too. To access minion details , click on the minion id.","title":"Minions"},{"location":"pages/overview/","text":"Overview \u00b6 (screenshot of overview) Conformity \u00b6 Conformity settings can be managed on the conformity page. You can set a maximum of 4 custom conformity fields. To be relevant, functions tracked by conformity fields must be run regularly. Keys \u00b6 Summary of keys status. You can manage keys on the keys page. Status \u00b6 SALT WEB SOCKET \u00b6 To display notifications on currently running jobs, alcali needs to connect to the Salt master web socket using credentials provided in the configuration . JOBS AND EVENTS IN DB \u00b6 Please refer to Mysql or Postgres returner documentation on how to manage database from Salt. A summary is provided in the installation section. JOBS SCHEDULED \u00b6 How many unique jobs based on the job name are currently enabled (see schedule section). JOBS RUNNING \u00b6 Parsed from Salt web socket. Jobs Stats \u00b6 Filter: ALL: All jobs. HIGHSTATE: only state.apply and state.highstate jobs. OTHER: All excluding state.apply and state.highstate jobs. Last Jobs \u00b6 The last 10 jobs run (see jobs section). Real time events \u00b6 JSON Formatted Events.","title":"Overview"},{"location":"pages/overview/#overview","text":"(screenshot of overview)","title":"Overview"},{"location":"pages/overview/#conformity","text":"Conformity settings can be managed on the conformity page. You can set a maximum of 4 custom conformity fields. To be relevant, functions tracked by conformity fields must be run regularly.","title":"Conformity"},{"location":"pages/overview/#keys","text":"Summary of keys status. You can manage keys on the keys page.","title":"Keys"},{"location":"pages/overview/#status","text":"","title":"Status"},{"location":"pages/overview/#salt-web-socket","text":"To display notifications on currently running jobs, alcali needs to connect to the Salt master web socket using credentials provided in the configuration .","title":"SALT WEB SOCKET"},{"location":"pages/overview/#jobs-and-events-in-db","text":"Please refer to Mysql or Postgres returner documentation on how to manage database from Salt. A summary is provided in the installation section.","title":"JOBS AND EVENTS IN DB"},{"location":"pages/overview/#jobs-scheduled","text":"How many unique jobs based on the job name are currently enabled (see schedule section).","title":"JOBS SCHEDULED"},{"location":"pages/overview/#jobs-running","text":"Parsed from Salt web socket.","title":"JOBS RUNNING"},{"location":"pages/overview/#jobs-stats","text":"Filter: ALL: All jobs. HIGHSTATE: only state.apply and state.highstate jobs. OTHER: All excluding state.apply and state.highstate jobs.","title":"Jobs Stats"},{"location":"pages/overview/#last-jobs","text":"The last 10 jobs run (see jobs section).","title":"Last Jobs"},{"location":"pages/overview/#real-time-events","text":"JSON Formatted Events.","title":"Real time events"},{"location":"pages/run/","text":"Run, Runner and Wheel \u00b6 You can run job using either the formatted form or a pseudo cli. Formatted \u00b6 For function completion and documentation, use the parse module setting. Custom modules should also be present. Target type \u00b6 Target \u00b6 This depends on the selected Target type . Function \u00b6 Function completion and documentation are taken from the parse module setting. Args and Keyword Arguments \u00b6 Use these fields for functions. If functions use named args or kwargs, they should be suggested. Schedule \u00b6 Schedule a recurring job, or postpone it. Test button \u00b6 The test button will run the selected function with test = True kwarg set. CLI \u00b6 This pseudo CLI should work like the salt command. Please refer to Pepper documentation.","title":"Run, Runner and Wheel"},{"location":"pages/run/#run-runner-and-wheel","text":"You can run job using either the formatted form or a pseudo cli.","title":"Run, Runner and Wheel"},{"location":"pages/run/#formatted","text":"For function completion and documentation, use the parse module setting. Custom modules should also be present.","title":"Formatted"},{"location":"pages/run/#target-type","text":"","title":"Target type"},{"location":"pages/run/#target","text":"This depends on the selected Target type .","title":"Target"},{"location":"pages/run/#function","text":"Function completion and documentation are taken from the parse module setting.","title":"Function"},{"location":"pages/run/#args-and-keyword-arguments","text":"Use these fields for functions. If functions use named args or kwargs, they should be suggested.","title":"Args and Keyword Arguments"},{"location":"pages/run/#schedule","text":"Schedule a recurring job, or postpone it.","title":"Schedule"},{"location":"pages/run/#test-button","text":"The test button will run the selected function with test = True kwarg set.","title":"Test button"},{"location":"pages/run/#cli","text":"This pseudo CLI should work like the salt command. Please refer to Pepper documentation.","title":"CLI"},{"location":"pages/schedule/","text":"Schedule \u00b6 Warning Schedules are not automatically added to the list. To refresh schedules, use the fab refresh schedule button. You can disable and delete schedules. TODO: add a way to manage jobs by names(on multiple minions).","title":"Schedule"},{"location":"pages/schedule/#schedule","text":"Warning Schedules are not automatically added to the list. To refresh schedules, use the fab refresh schedule button. You can disable and delete schedules. TODO: add a way to manage jobs by names(on multiple minions).","title":"Schedule"},{"location":"pages/settings/","text":"Settings \u00b6 General Settings \u00b6 Parse modules \u00b6 To provide function completion and documentation in run, runner and wheel pages, you need to run this on a selected target. This will run sys.list_functions , sys.doc , sys.list_runner_functions and sys.runner_doc on the selected target. It will also run doc.wheel on the connected salt master. If you have custom modules present on the selected target, they will be parsed too. Minions Fields \u00b6 To add more details in the minion detail page, you can add custom minions fields. We usually add: highstate : state.show_highstate top file : state.show_highstate Info Because minions fields are linked to minions, you need to first have some minions present in the database. Use the refresh minions button. User Settings \u00b6 Job notifications \u00b6 Filter which events are being displayed in the notification section and real-time events. Warning Salt's event stream is very busy and can easily overwhelm the available memory for a browser tab. This control both notifications and real-time events on the overview page.","title":"Settings"},{"location":"pages/settings/#settings","text":"","title":"Settings"},{"location":"pages/settings/#general-settings","text":"","title":"General Settings"},{"location":"pages/settings/#parse-modules","text":"To provide function completion and documentation in run, runner and wheel pages, you need to run this on a selected target. This will run sys.list_functions , sys.doc , sys.list_runner_functions and sys.runner_doc on the selected target. It will also run doc.wheel on the connected salt master. If you have custom modules present on the selected target, they will be parsed too.","title":"Parse modules"},{"location":"pages/settings/#minions-fields","text":"To add more details in the minion detail page, you can add custom minions fields. We usually add: highstate : state.show_highstate top file : state.show_highstate Info Because minions fields are linked to minions, you need to first have some minions present in the database. Use the refresh minions button.","title":"Minions Fields"},{"location":"pages/settings/#user-settings","text":"","title":"User Settings"},{"location":"pages/settings/#job-notifications","text":"Filter which events are being displayed in the notification section and real-time events. Warning Salt's event stream is very busy and can easily overwhelm the available memory for a browser tab. This control both notifications and real-time events on the overview page.","title":"Job notifications"},{"location":"pages/users/","text":"Users \u00b6 Create, update and delete users. If you use Alcali auth module , you can also manage token renewal and revocation.","title":"Users"},{"location":"pages/users/#users","text":"Create, update and delete users. If you use Alcali auth module , you can also manage token renewal and revocation.","title":"Users"}]}